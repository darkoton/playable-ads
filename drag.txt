        function dragDrop(e) {
          e.preventDefault()

          wire.style.transform = 'none'
          img.src = img.dataset.out

          const rect = wire.getBoundingClientRect();
          let offsetX = e.clientX - rect.left;
          let offsetY = e.clientY - rect.top;

          if (e.touches) {
            offsetX = e.touches[0].clientX - rect.left;
            offsetY = e.touches[0].clientY - rect.top;
          } else {
            offsetX = e.clientX - rect.left;
            offsetY = e.clientY - rect.top;
          }

          function moveAt(e) {

            if (e.touches) {
              wire.style.left = e.touches[0].pageX - offsetX + 'px';
              wire.style.top = e.touches[0].pageY - offsetY + 'px';
            } else {
              wire.style.left = e.pageX - offsetX + 'px';
              wire.style.top = e.pageY - offsetY + 'px';
            }
          }

          document.onmousemove = document.ontouchmove = function (e) {
            moveAt(e);
          }

          document.onmouseup = document.ontouchend = function () {
            document.onmousemove = null
            document.onmouseup = null


            // Check overlap
            const otherHitbox = Array.from(document.querySelectorAll(`[data-hitbox="${hitbox.dataset.hitbox}"]`)).filter(ht => ht !== hitbox)[0]

            if (isIntersecting(hitbox, otherHitbox)) {
              const otherHitboxRect = otherHitbox.getBoundingClientRect()
              img.src = img.dataset.in

              wire.style.left = otherHitboxRect.x + (otherHitbox.offsetWidth / 2) - (wire.offsetWidth / 2) + 'px';
              wire.style.top = otherHitboxRect.y - wire.offsetHeight + otherHitbox.offsetHeight * (wire.dataset.offset ? wire.dataset.offset : 1) + 'px';

            } else {
              wire.style.transform = null
            }

          }
        }
